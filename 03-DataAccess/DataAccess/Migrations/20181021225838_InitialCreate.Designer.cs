// <auto-generated />
using System;
using DataAccess.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(MangaDataContext))]
    [Migration("20181021225838_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("DataAccess.Entity.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MangaId");

                    b.Property<int>("Number");

                    b.Property<bool>("Seen");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("MangaId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("DataAccess.Entity.Manga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CoverImage");

                    b.Property<string>("CoverType");

                    b.Property<string>("CoverUrl");

                    b.Property<string>("Date");

                    b.Property<string>("Name");

                    b.Property<string>("Resume");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Mangas");
                });

            modelBuilder.Entity("DataAccess.Entity.MangaTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MangaId");

                    b.Property<int?>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("MangaId");

                    b.HasIndex("TagId");

                    b.ToTable("MangaTags");
                });

            modelBuilder.Entity("DataAccess.Entity.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ChapterId");

                    b.Property<string>("Content");

                    b.Property<string>("ContentType");

                    b.Property<int>("Number");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("DataAccess.Entity.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Label");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DataAccess.Entity.Chapter", b =>
                {
                    b.HasOne("DataAccess.Entity.Manga")
                        .WithMany("Chapter")
                        .HasForeignKey("MangaId");
                });

            modelBuilder.Entity("DataAccess.Entity.MangaTag", b =>
                {
                    b.HasOne("DataAccess.Entity.Manga", "Manga")
                        .WithMany("MangaTags")
                        .HasForeignKey("MangaId");

                    b.HasOne("DataAccess.Entity.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("DataAccess.Entity.Page", b =>
                {
                    b.HasOne("DataAccess.Entity.Chapter")
                        .WithMany("Pages")
                        .HasForeignKey("ChapterId");
                });
#pragma warning restore 612, 618
        }
    }
}
